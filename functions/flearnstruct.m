function [Mcmc]=flearnstruct(Param,savefile)
%flearnstruct Summary of this function goes here
% INPUTS:
%	Param:	parameter object
%   savefile: save result?
% OUTPUTS:
%	Mcmc:	mcmc result
%
%   Author: Shinya Tasaki, Ph.D. (stasaki@gmail.com)
%   Code covered by the 3-clause BSD License

% specify paramter

pa_limit = Param.pa_limit;
nsamples = Param.nSampGraph;
method = Param.mcmethod;
runt = Param.runt;
Param.sample_duration = runt/Param.nSampGraph;
sample_duration = Param.sample_duration;
hprior = Param.hprior;
fixedge = Param.fixedge;


%load(Param.savepath.ls);
if Param.cmat==0
    load(Param.savepath.ls);
elseif Param.cmat==1
    if Param.eQTLnet==1
        LS = readLS_eQTLnet( Param );
    else
        LS = readLS( Param );
    end
end

N=length(LS);
Hprior = ones(N);
Hprior = setdiag(Hprior,0);

if ~strcmp('no',hprior)
    temp=load(Param.savepath.hprior);
    Hprior=temp.Hprior.skeleton;
end
Hprior=full(Hprior);

FixedEdge = zeros(N);
if ~strcmp('no',fixedge)
    temp=load(Param.savepath.fixedge);
    FixedEdge = temp.FixedEdge;
end



init_dag=get_init_dag(N,pa_limit,Hprior,FixedEdge);




switch method,
    case 'STR'
        start=tic;
        [Mcmc.sampled_graphs, Mcmc.LL, Mcmc.accept_ratio] =...
            learn_struct_mcmc_STR('LS',LS, 'init_dag',init_dag,...
            'pa_limit',pa_limit,...
            'hprior',Hprior,...
            'nsamples', nsamples,...
            'runtime',runt,...
            'sample_duration', sample_duration);
        Mcmc.toc=toc(start);
        
    case 'M.STR'
        
        numtry=Param.nSampGraph;
        Mcmc.sampled_graphs=cell(numtry,1);
        Mcmc.LL=-inf(numtry,1);
        
        start=tic;
        for i=1:numtry
            i
            init_dag=get_init_dag(N,pa_limit,Hprior,FixedEdge);
            [Mcmc.sampled_graphs(i), Mcmc.LL(i)] =...
                learn_struct_mcmc_STR('LS',LS, 'init_dag',init_dag,...
                'pa_limit',pa_limit,...
                'hprior',Hprior,...
                'nsamples',1,...
                'runtime',sample_duration,...
                'sample_duration', sample_duration);
            
        end
        Mcmc.toc=toc(start);
        
        
        
    case '2PB'
        start=tic;
        [Mcmc.sampled_graphs, Mcmc.LL] =...
            learn_struct_mcmc_gibbs_block2('LS',LS, 'init_dag',init_dag,...
            'pa_limit',pa_limit,...
            'hprior',Hprior,...
            'nsamples', nsamples,...
            'runtime',runt,...
            'sample_duration', sample_duration);
        Mcmc.toc=toc(start);
        
    case  'M.2PB'
        numtry=Param.nSampGraph;
        Mcmc.sampled_graphs=cell(numtry,1);
        Mcmc.LL=-inf(numtry,1);
        
        start=tic;
        for i=1:numtry
            i
            init_dag=get_init_dag(N,pa_limit,Hprior,FixedEdge);
            [Mcmc.sampled_graphs(i), Mcmc.LL(i)] =...
                learn_struct_mcmc_gibbs_block2('LS',LS, 'init_dag',init_dag,...
                'pa_limit',pa_limit,...
                'hprior',Hprior,...
                'nsamples',1,...
                'runtime',sample_duration,...
                'sample_duration', sample_duration);
            
        end
        Mcmc.toc=toc(start);
        
    case '1PB'
        start=tic;
        [Mcmc.sampled_graphs, Mcmc.LL] =...
            learn_struct_mcmc_gibbs_block2_con('LS',LS, 'init_dag',init_dag,...
            'pa_limit',pa_limit,...
            'rev',0,...
            'pr',0,...
            'hprior',Hprior,...
            'nsamples', nsamples,...
            'runtime',runt,...
            'sample_duration', sample_duration);
        Mcmc.toc=toc(start);
        
    case  'M.1PB'
        numtry=Param.nSampGraph;
        Mcmc.sampled_graphs=cell(numtry,1);
        Mcmc.LL=-inf(numtry,1);
        
        start=tic;
        for i=1:numtry
            i
            init_dag=get_init_dag(N,pa_limit,Hprior,FixedEdge);
            [Mcmc.sampled_graphs(i), Mcmc.LL(i)] =...
                learn_struct_mcmc_gibbs_block2_con('LS',LS, 'init_dag',init_dag,...
                'pa_limit',pa_limit,...
                'rev',0,...
                'pr',0,...
                'hprior',Hprior,...
                'nsamples',1,...
                'runtime',sample_duration,...
                'sample_duration', sample_duration);
        end
        Mcmc.toc=toc(start);
        
        
    case 'c2PB'
        start=tic;
        [Mcmc.sampled_graphs, Mcmc.LL] =...
            learn_struct_mcmc_gibbs_block2_con('LS',LS, 'init_dag',init_dag,...
            'pa_limit',pa_limit,...
            'rev',1,...
            'pr',1,...
            'hprior',Hprior,...
            'nsamples', nsamples,...
            'runtime',runt,...
            'sample_duration', sample_duration);
        Mcmc.toc=toc(start);
        
    case 'M.c2PB'
        numtry=Param.nSampGraph;
        Mcmc.sampled_graphs=cell(numtry,1);
        Mcmc.LL=-inf(numtry,1);
        
        start=tic;
        for i=1:numtry
            i
            init_dag=get_init_dag(N,pa_limit,Hprior,FixedEdge);
            [Mcmc.sampled_graphs(i), Mcmc.LL(i)] =...
                learn_struct_mcmc_gibbs_block2_con('LS',LS, 'init_dag',init_dag,...
                'pa_limit',pa_limit,...
                'rev',1,...
                'pr',1,...
                'hprior',Hprior,...
                'nsamples',1,...
                'runtime',sample_duration,...
                'sample_duration', sample_duration);
        end
        Mcmc.toc=toc(start);
        
        
    case '3PB'
        start=tic;
        [Mcmc.sampled_graphs, Mcmc.LL] =...
            learn_struct_mcmc_gibbs_block3('LS',LS, 'init_dag',init_dag,...
            'pa_limit',pa_limit,...
            'hprior',Hprior,...
            'nsamples', nsamples,...
            'runtime',runt,...
            'sample_duration', sample_duration);
        Mcmc.toc=toc(start);
        
    case  'M.3PB'
        numtry=Param.nSampGraph;
        Mcmc.sampled_graphs=cell(numtry,1);
        Mcmc.LL=-inf(numtry,1);
        
        start=tic;
        for i=1:numtry
            i
            init_dag=get_init_dag(N,pa_limit,Hprior,FixedEdge);
            [Mcmc.sampled_graphs(i), Mcmc.LL(i)] =...
                learn_struct_mcmc_gibbs_block3('LS',LS, 'init_dag',init_dag,...
                'pa_limit',pa_limit,...
                'hprior',Hprior,...
                'nsamples',1,...
                'runtime',sample_duration,...
                'sample_duration', sample_duration);
        end
        Mcmc.toc=toc(start);
        
        
    case '4PB'
        start=tic;
        [Mcmc.sampled_graphs, Mcmc.LL] =...
            learn_struct_mcmc_gibbs_block4('LS',LS, 'init_dag',init_dag,...
            'pa_limit',pa_limit,...
            'hprior',Hprior,...
            'nsamples', nsamples,...
            'runtime',runt,...
            'sample_duration', sample_duration);
        Mcmc.toc=toc(start);
        
    case  'M.4PB'
        numtry=Param.nSampGraph;
        Mcmc.sampled_graphs=cell(numtry,1);
        Mcmc.LL=-inf(numtry,1);
        
        start=tic;
        for i=1:numtry
            i
            init_dag=get_init_dag(N,pa_limit,Hprior,FixedEdge);
            [Mcmc.sampled_graphs(i), Mcmc.LL(i)] =...
                learn_struct_mcmc_gibbs_block4('LS',LS, 'init_dag',init_dag,...
                'pa_limit',pa_limit,...
                'hprior',Hprior,...
                'nsamples',1,...
                'runtime',sample_duration,...
                'sample_duration', sample_duration);
            
        end
        Mcmc.toc=toc(start);
        
    case 'REV50'
        start=tic;
        [Mcmc.sampled_graphs, Mcmc.LL, Mcmc.accept_ratio] =...
            learn_struct_mcmc_REV('LS',LS, 'init_dag',init_dag,...
            'pa_limit',pa_limit,...
            'rev',0.50,...
            'hprior',Hprior,...
            'nsamples', nsamples,...
            'runtime',runt,...
            'sample_duration', sample_duration);
        Mcmc.toc=toc(start);
        
    case  'M.REV50'
        numtry=Param.nSampGraph;
        Mcmc.sampled_graphs=cell(numtry,1);
        Mcmc.LL=-inf(numtry,1);
        
        start=tic;
        for i=1:numtry
            i
            init_dag=get_init_dag(N,pa_limit,Hprior,FixedEdge);
            [Mcmc.sampled_graphs(i), Mcmc.LL(i)] =...
                learn_struct_mcmc_REV('LS',LS, 'init_dag',init_dag,...
                'pa_limit',pa_limit,...
                'rev',0.50,...
                'hprior',Hprior,...
                'nsamples',1,...
                'runtime',sample_duration,...
                'sample_duration', sample_duration);
        end
        Mcmc.toc=toc(start);
        
    case 'REV95'
        start=tic;
        [Mcmc.sampled_graphs, Mcmc.LL, Mcmc.accept_ratio] =...
            learn_struct_mcmc_REV('LS',LS, 'init_dag',init_dag,...
            'pa_limit',pa_limit,...
            'rev',0.95,...
            'hprior',Hprior,...
            'nsamples', nsamples,...
            'runtime',runt,...
            'sample_duration', sample_duration);
        Mcmc.toc=toc(start);
        
    case  'M.REV95'
        numtry=Param.nSampGraph;
        Mcmc.sampled_graphs=cell(numtry,1);
        Mcmc.LL=-inf(numtry,1);
        
        start=tic;
        for i=1:numtry
            i
            init_dag=get_init_dag(N,pa_limit,Hprior,FixedEdge);
            [Mcmc.sampled_graphs(i), Mcmc.LL(i)] =...
                learn_struct_mcmc_REV('LS',LS, 'init_dag',init_dag,...
                'pa_limit',pa_limit,...
                'rev',0.95,...
                'hprior',Hprior,...
                'nsamples',1,...
                'runtime',sample_duration,...
                'sample_duration', sample_duration);
            
        end
        Mcmc.toc=toc(start);
        
        
    case 'c4PB'
        start=tic;
        [Mcmc.sampled_graphs, Mcmc.LL] =...
            learn_struct_mcmc_gibbs_block4_con('LS',LS, 'init_dag',init_dag,...
            'pa_limit',pa_limit,...
            'hprior',Hprior,...
            'maxlen',3,...
            'nsamples', nsamples,...
            'runtime',runt,...
            'sample_duration', sample_duration);
        Mcmc.toc=toc(start);
        
    case 'M.c4PB'
        numtry=Param.nSampGraph;
        Mcmc.sampled_graphs=cell(numtry,1);
        Mcmc.LL=-inf(numtry,1);
        
        start=tic;
        for i=1:numtry
            i
            init_dag=get_init_dag(N,pa_limit,Hprior,FixedEdge);
            
            [Mcmc.sampled_graphs(i), Mcmc.LL(i)] =...
                learn_struct_mcmc_gibbs_block4_con('LS',LS, 'init_dag',init_dag,...
                'pa_limit',pa_limit,...
                'hprior',Hprior,...
                'maxlen',3,...
                'nsamples',1,...
                'runtime',sample_duration,...
                'sample_duration', sample_duration);
        end
        Mcmc.toc=toc(start);
        
    case 'c3PB'
        start=tic;
        [Mcmc.sampled_graphs, Mcmc.LL] =...
            learn_struct_mcmc_gibbs_block4_con('LS',LS, 'init_dag',init_dag,...
            'pa_limit',pa_limit,...
            'hprior',Hprior,...
            'maxlen',2,...
            'nsamples', nsamples,...
            'runtime',runt,...
            'sample_duration', sample_duration);
        Mcmc.toc=toc(start);
        
    case 'M.c3PB'
        numtry=Param.nSampGraph;
        Mcmc.sampled_graphs=cell(numtry,1);
        Mcmc.LL=-inf(numtry,1);
        
        start=tic;
        for i=1:numtry
            i
            init_dag=get_init_dag(N,pa_limit,Hprior,FixedEdge);
            
            [Mcmc.sampled_graphs(i), Mcmc.LL(i)] =...
                learn_struct_mcmc_gibbs_block4_con('LS',LS, 'init_dag',init_dag,...
                'pa_limit',pa_limit,...
                'hprior',Hprior,...
                'maxlen',2,...
                'nsamples',1,...
                'runtime',sample_duration,...
                'sample_duration', sample_duration);
            
        end
        Mcmc.toc=toc(start);
        
        
        
        
end


Mcmc.init_dag=sparse(init_dag);

if savefile ==1
    save(Param.savepath.mcmc,'Mcmc')
end


end

    function init_dag=get_init_dag(N,pa_limit,Hprior,FixedEdge)
        % search move destination specified by random number u
        init_dag = mk_rnd_dag(N,pa_limit);
        init_dag = double(init_dag&Hprior);
        init_dag = init_dag|FixedEdge;
    end

